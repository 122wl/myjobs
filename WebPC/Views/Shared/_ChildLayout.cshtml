@using Model
@using Newtonsoft.Json
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    <link href="~/Scripts/poshytip/tip-yellowsimple/tip-yellowsimple.css" rel="stylesheet" />
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/poshytip/jquery.poshytip.js"></script>
    <script src="~/Scripts/Common/Common.js"></script>
    @RenderSection("styles", required: false)
    <script type="text/javascript">
    var publicConfig = {};
    $.ajax({
        url: '/base/GetConfigParamPublic',
        dataType: 'json',
        async: false,
        cache: false, //到时候改为TRUE
        success: function (datas) {
            publicConfig = $.extend(publicConfig, datas);
        }

    });
    window.publicConfig = publicConfig;

    </script>



</head>
<body style="background-color: white;padding: 5px">
    <section>
        @RenderBody()
    </section>
    @RenderSection("scripts", required: false)
    @{
        var permission = "";
        UserPC userPermission = null;
        if (Session["User"] != null)
        {
            userPermission = Session["User"] as UserPC;
            if (userPermission != null && userPermission.UserBasic != null)
            {
                userPermission.UserBasic.UserPc = null;
            }
            else
            {
                userPermission = new UserPC()
                {
                    UserBasic = new UserBasic(),
                    RolePowerList = new List<RolePower>()
                };
            }
        }
        else
        {
            userPermission = new UserPC()
            {
                UserBasic = new UserBasic(),
                RolePowerList = new List<RolePower>()
            };
        }
        permission = JsonConvert.SerializeObject(userPermission);
    }
    <script>
        window.permission = '@permission';
        $(document).ajaxStart(function () {
            $.loading();
        }).ajaxComplete(function () {
            var data = arguments[1].responseJSON;
            if (data && data.Status != undefined && data.Identify != undefined && data.Identify.expired != undefined) {
                if ((data.Status == false || data.Status == "false") && (data.Identify.expired || data.Identify.expired == "true")) {
                    window.top.location.href = window.top.location.origin + "?returnUrl=" + encodeURIComponent(window.top.location.href);
                }
            }
            setTimeout(function () {
                $.loadingEnd();
            }, 200);

        }).ajaxError(function (event, jqxhr, settings, thrownError) {

            if (jqxhr.responseText.indexOf("中检测到有潜在危险的") != -1) {
                window.top.$.message("请勿输入的有潜在危险HTML字符!", false);
            } else {
                window.top.$.message("服务器异常，请联系管理员！");
            }
        });;
    </script>


</body>
</html>
